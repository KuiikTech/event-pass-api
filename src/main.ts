import {
  Logger,
  RequestMethod,
  ValidationPipe,
  VersioningType,
} from '@nestjs/common';
import { NestFactory } from '@nestjs/core';
import { DocumentBuilder, SwaggerModule } from '@nestjs/swagger';

import { AppModule } from './app.module';

const logger = new Logger('main');

async function bootstrap() {
  const app = await NestFactory.create(AppModule);

  app.enableVersioning({
    type: VersioningType.URI,
    prefix: '',
  });
  app.setGlobalPrefix(process.env.API_PREFIX, {
    exclude: [{ path: '/', method: RequestMethod.GET }],
  });
  app.useGlobalPipes(
    new ValidationPipe({
      forbidNonWhitelisted: true,
      transform: true,
      whitelist: true,
    }),
  );

  const config = new DocumentBuilder()
    .setTitle(process.env.API_NAME)
    .setDescription(process.env.API_DESCRIPTION)
    .setVersion(process.env.npm_package_version)
    .build();
  const document = SwaggerModule.createDocument(app, config);
  SwaggerModule.setup(process.env.API_PREFIX, app, document);

  const HOST = process.env.HOST;
  const PORT = process.env.PORT;
  await app.listen(PORT, HOST, () => {
    logLogo();
    logger.log(`Listening at http://${HOST}:${PORT}`);
    logger.log('');
  });
}

function logLogo() {
  const logo = {
    generatedBy:
      'Generated by: https://patorjk.com/software/taag/#p=display&h=1&f=Big&t=EventPass%20Api',
    lines: [
      '',
      '______                   _    _____                                    _ ',
      '|  ____|                 | |  |  __ \\                     /\\           (_)',
      '| |__ __   __ ___  _ __  | |_ | |__) |__ _  ___  ___     /  \\    _ __   _ ',
      "|  __|\\ \\ / // _ \\| '_ \\ | __||  ___// _` |/ __|/ __|   / /\\ \\  | '_ \\ | |",
      '| |____\\ V /|  __/| | | || |_ | |   | (_| |\\__ \\__  \\  / ____ \\ | |_) || |',
      '|______|\\_/  \\___||_| |_| \\__||_|    \\__,_||___/|___/ /_/    \\_\\| .__/ |_|',
      '                                                                | |       ',
      `                                                                |_|       v.${process.env.npm_package_version}`,
      '',
    ],
  };
  logo.lines.forEach((line) => logger.log(line));
}

bootstrap();
